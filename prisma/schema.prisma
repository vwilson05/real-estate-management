generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Todo {
  id          String   @id @default(cuid())
  title       String
  description String?
  status      String   @default("OPEN")
  priority    String   @default("MEDIUM")
  type        String   @default("GENERAL")
  dueDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  propertyId  String
  property    Property @relation(fields: [propertyId], references: [id])
  repairId    String?
  repair      Repair?  @relation(fields: [repairId], references: [id])
  tenantId    String?
  tenant      Tenant?  @relation(fields: [tenantId], references: [id])
  calendarEventId String?
  calendarEvent CalendarEvent? @relation(fields: [calendarEventId], references: [id])

  @@index([propertyId])
  @@index([repairId])
  @@index([tenantId])
  @@index([calendarEventId])
}

model Property {
  id             String          @id @default(uuid())
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  address        String
  city           String
  state          String
  zipCode        String
  type           String
  marketValue    Float
  purchasePrice  Float
  purchaseDate   DateTime
  description    String?
  latitude       Float?
  longitude      Float?
  calendarEvents CalendarEvent[]
  todos          Todo[]
  repairs        Repair[]
  tenants        Tenant[]
  transactions   Transaction[]
}

model Transaction {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  date        DateTime
  amount      Float
  type        String
  category    String
  description String?
  propertyId  String
  property    Property @relation(fields: [propertyId], references: [id])
}

model Repair {
  id                      String   @id @default(cuid())
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  date                    DateTime
  cost                    Float
  description             String
  status                  String
  priority                String
  item                    String
  estimatedCompletionDate DateTime
  propertyId              String
  todos                   Todo[]
  property                Property @relation(fields: [propertyId], references: [id])
}

model Tenant {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  name       String
  email      String?
  phone      String?
  leaseStart DateTime
  leaseEnd   DateTime
  rentAmount Float
  propertyId String
  todos      Todo[]
  property   Property @relation(fields: [propertyId], references: [id])
}

model CalendarEvent {
  id          String    @id @default(cuid())
  title       String
  description String?
  start       DateTime
  end         DateTime?
  allDay      Boolean   @default(false)
  type        String
  propertyId  String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  property    Property  @relation(fields: [propertyId], references: [id])
  todo        Todo[]
}
